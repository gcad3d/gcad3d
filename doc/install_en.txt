doc/install_en.txt                                      2024-08-14
==================================================================


Linux-Installation-binary
Linux-uninstall

MS-Win-Installation-binary
MS-Win-uninstall

Linux-Installation-source
MS-Win-Installation-source



DIRECTORIES-DEVELOPMENT

DIRECTORIES-INSTALLED-Linux

DIRECTORIES-INSTALLED-MS-Win



==================================================================
Linux-Installation-binary
==================================================================

__________________________________________________________________
Linux Prerequisites for binary installation:


# OpenGL or Mesa must be installed:
# Test if OpenGL is working:
# eg install mesa-utils; run glxgears or glxheads



Install for debian-os:  (eg Debian, Ubuntu ..)
- Download package gCAD3D-#.##-bin-amd64.de
  - interactiv: select package with eg "software-center"
  - or from terminal:
  sudo gdebi gCAD3D-#.##-bin-amd64.deb
  - or
  sudo dpkg -i gCAD3D-#.##-bin-amd64.deb


Install for rpm-os  (eg CentOS Fedora ..)    (not active - no gtk2glarea-lib)
- Download package gcad3d-#.##-#.x86_64.rpm
  - from terminal:
  sudo rpm -i gcad3d-#.##-#.x86_64.rpm


# Used directories: see DIRECTORIES-INSTALLED-Linux below





==================================================================
Linux-uninstall
==================================================================

If you did install with a packet-manager-program then you should
  uninstall with the same program.


Uninstall manually:

Uninstall for debian-os:  (eg Debian, Ubuntu ..)
sudo apt-get --purge remove gcad3d


Uninstall for rpm-os  (eg CentOS Fedora ..)
rpm -qa | grep -i gcad3d                 # find <pkgNam>
sudo rpm -e <pkgNam>


All local settings, models in directory $HOME/gCAD3D must be removed manually.
# rm -rf ~/gCAD3D



==================================================================
MS-Win-Installation-binary
==================================================================

Supported platforms:
  Win10, Win11

Prerequisites for binary installation:
  none
  The package contains a executable binary gCAD3D, all necessary Libs
  and some demo-models.

  All programfiles go into %ProgramFiles%\gCAD3D\;
  all datafiles go into    %APPDATA%\gCAD3D\.

  gCAD3D does not access / modify the registry,
  gCAD3D does not copy files into the system-dirctories.

  Used directories: see DIRECTORIES-INSTALLED-MS-Win below



==================================================================
MS-Win-uninstall
==================================================================

Use ControlPanel / Software /  Remove / gCAD3D



==================================================================
Linux-Installation-source
==================================================================

# install gtk-dev:
sudo apt install libgtk2.0-0
sudo apt install libgtk2.0-dev
sudo apt install libgtkgl2.0-1
sudo apt install libgtkgl2.0-dev


# install git
sudo apt install git
git --version
git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
git config --global core.editor "vim"
git config --list


# get gcad3d:
cd
mkdir devel
cd devel
#  copy software to ~/devel/gcad3d/*
git clone https://github.com/gcad3d/gcad3d.git


# (re)build gcad3d:
cd ~/devel/gcad3d/src/UIX
./do complete


# test after sucessful build:
./do


# gCAD3D.exe and all plugins are built by scripts do, build__, *.mak, ..
# see devbase.sh - creates all necessary output-directories
# - directories: see doc/directories_en.txt
# display all options of script:
./do help




==================================================================
MS-Win-Installation-source
==================================================================

- YOU MUST USE USER_ACCOUNT WITH NO SPACE IN USERNAME
- install msys2 64-bit from https://www.msys2.org/wiki/MSYS2-installation/ -
  - get and start msys2-x86_64-20230526.exe

- install packages -
  - in msys-console (C:\msys64\ucrt64.exe) start:

pacman -S mingw-w64-ucrt-x86_64-gcc
pacman -S mingw-w64-ucrt-x86_64-gcc-libs
pacman -S mingw-w64-ucrt-x86_64-gdb
pacman -S mingw-w64-ucrt-x86_64-make
pacman -S mingw-w64-ucrt-x86_64-dlfcn
pacman -S mingw-w64-ucrt-x86_64-binutils
pacman -S mingw-w64-ucrt-x86_64-toolchain
pacman -S mingw-w64-ucrt-x86_64-pkgconf
pacman -S mingw-w64-ucrt-x86_64-gtk2
pacman -S mingw-w64-ucrt-x86_64-libltdl
pacman -S mingw-w64-x86_64-gtkglarea
pacman -S mingw-w64-x86_64-nsis
pacman -S mingw-w64-ucrt-x86_64-ctags
pacman -S autotools
pacman -S patch
pacman -S ed

pacman -S vim
pacman -S git
pacman -S rsync


# start Terminal (Linux: eg gnome-terminal; Win/MSYS: icon urct64.exe)

# install git
sudo apt install git
git --version
git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
git config --global core.editor "vim"
git config --list



# get gcad3d:
cd
mkdir devel
cd devel
#  copy software to ~/devel/gcad3d/*
git clone https://github.com/gcad3d/gcad3d.git



# build:
cd ~/devel/gcad3d/src/UIX

# gCAD3D.exe and all plugins are built by scripts do, build__, *.mak, ..
# see devbase.sh - creates all necessary output-directories
# - directories: see doc/directories_en.txt
# display all options of script:
./do help

# rebuild complete:
./do complete


# MS-Msys: VPATH does not check time-stamps correct; whats wrong ?
# MS-Msys: if ctags (V5.8) crashes - use ctags V5.7
wget https://www.vim.org/scripts/download_script.php?src_id=10387 -O ctags.exe
mv /ucrt64/bin/ctags.exe /ucrt64/bin/ctags_orig
mv ctags.exe /ucrt64/bin/.

# test after sucessful build:
./do




======================================================================
DIRECTORIES-DEVELOPMENT:
======================================================================

Basedirectory Default is ~/devel/gcad3d/

  src/APP         aux-sources - testProgs
     |
     /UIX         build unix-executables; "./do help"
     |            build MS-Windows--executables; "do help"
     |
     /DEB         build debian-package (makefiles); 
     |
     /RPM         build rpm-package (not active; no gtk2_glarea-lib)
     |
     /MSVC        build MS-VC-Windows-executable (not active; was used for Win-32-bit)

  debian/         create debian-package

  pack_MSYS/      create MS-Windows-package

  rpm/            create rpm-package (not active; no gtk2_glarea-lib)

  icons           icons

  doc             documentation

  packages        install-packages




FILES-DEVELOPMENT:

  examples.gz     DemoModels, initial-setupfiles





======================================================================
DIRECTORIES-INSTALLED-Linux:
======================================================================

Basedirectory - Default is ~/gCAD3D/ - gcad_dir_local
  cfg_Linux/    configfiles; eg dir.lst
  dat/          default-model-directory; symbolic-name is "Data"
  ctlg/         default-catalog-files; symbolic-name is "CATALOG"
  prg/          application-programs (CAD-script-programs); symbolic-name is "APPLI"
  tmp/          temporary used files

/usr/bin/gcad3d                        startscript
/usr/lib/gcad3d/Linux_x86_64/          binaries    - gcad_dir_bin
/usr/share/gcad3d/                     examples.gz gcad3d.desktop
/usr/share/gcad3d/icons/               icons       - gcad_dir_ico
/usr/share/gcad3d/doc/                 doc         - gcad_dir_doc


  This symbols can be set in startscript:
    gcad_dir_bin     (Def. = /usr/lib/gcad3d/Linux_x86_64/)
    gcad_dir_bas     (Def. = /usr/share/gcad3d/)
    gcad_dir_ico     (Def. = ${gcad_dir_bas}/icons/)
    gcad_dir_doc     (Def. = ${gcad_dir_bas}/doc/)
    gcad_dir_local   (Def. = ${HOME}/gCAD3D/)


If file $HOME/gCAD3D/cfg_Linux/gCAD3D.rc does not exist:
  /usr/share/gcad3d/examples.zip will be extracted,
  - this will overwrite all startup-userfiles with the original version,
  - also the user-config-files  in $HOME/gCAD3D/cfg_Linux/ !






======================================================================
DIRECTORIES-INSTALLED-MS-Win:
======================================================================

Basedirectory Default is %APPDATA%\gCAD3D\ - gcad_dir_local
  cfg_MSYS\     configfiles; eg dir.lst
  dat\          default-model-directory; symbolic-name is "Data"
  ctlg\         default-catalog-files; symbolic-name is "CATALOG"
  prg\          application-programs (CAD-script-programs); symbolic-name is "APPLI"
  tmp\          temporary used files

%ProgramFiles%\gCAD3D\                    gCAD3D.bat, examples.gz (initial-setupfiles)
%ProgramFiles%\gCAD3D\bin_MINGW_x86_64\   binaries    - gcad_dir_bin
%ProgramFiles%\gCAD3D\icons\              icons       - gcad_dir_ico
%ProgramFiles%\gCAD3D\doc\                doc         - gcad_dir_doc


  This symbols can be set in startscript:
    gcad_dir_bin     (Def. = %ProgramFiles%\gCAD3D\bin_MINGW_x86_64\)
    gcad_dir_bas     (Def. = %ProgramFiles%\gCAD3D\)
    gcad_dir_ico     (Def. = %ProgramFiles%\gCAD3D\icons\)
    gcad_dir_local   (Def. = %APPDATA%\gCAD3D\)

If file %APPDATA%/gCAD3D/cfg_MSYS/gCAD3D.rc does not exist:
  %ProgramFiles%\gCAD3D\examples.zip will be extracted,
  the defaultfiles will be copied into %APPDATA%/gCAD3D/cfg_MSYS/.



======================================================================
 Send bug reports, suggestions for improvements to support@gcad3d.org


# EOF
=====================================================================
Send bug reports, suggestions for improvements to support@gcad3d.org

EOF
